{"version":3,"sources":["features/userSlice.js","features/appSlice.js","store.js","SidebarHeader.js","SidebarChannels.js","firebase.js","SidebarChannelList.js","SidebarProfile.js","Sidebar.js","ChatHeader.js","ChatMessage.js","ChatInput.js","Chat.js","img/discord.png","Login.js","App.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","appSlice","channelId","channelName","setChannelInfo","selectChannelId","app","selectChannelName","reducer","combineReducers","userReducer","appReducer","configureStore","SidebarHeader","className","SidebarChannels","props","dispatch","useDispatch","onClick","id","onClose","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","SidebarChannelList","useSelector","useState","channels","setChannels","useEffect","collection","onSnapshot","snapShot","docs","map","doc","channel","data","title","prompt","add","SidebarProfile","Avatar","src","photo","signOut","displayName","uid","Sidebar","open","ChatHeader","openMenu","type","placeholder","ChatMessage","Date","time","seconds","toISOString","message","ChatInput","disabled","value","input","onChange","handleInput","e","send","Chat","setInput","messages","setMessages","orderBy","snapshot","msg","timestamp","target","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","FieldValue","serverTimestamp","Login","logo","alt","Button","signInWithPopup","catch","err","console","log","App","onAuthStateChanged","authUser","photoURL","email","drawer","setDrawer","Drawer","anchor","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ca632c3f.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: {\r\n        user: null\r\n    },\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n        logout: (state) => {\r\n            state.user = null;\r\n        }\r\n    }\r\n});\r\n\r\nexport const  { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: \"app\",\r\n    initialState: {\r\n        channelId: null,\r\n        channelName: null\r\n    },\r\n    reducers: {\r\n        setChannelInfo: (state,action) => {\r\n            state.channelId = action.payload.channelId,\r\n            state.channelName = action.payload.channelName\r\n        }\r\n    }\r\n});\r\n\r\nexport const  { setChannelInfo } = appSlice.actions;\r\n\r\nexport const selectChannelId = (state) => state.app.channelId;\r\nexport const selectChannelName = (state) => state.app.channelName;\r\n\r\nexport default appSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from './features/userSlice'\r\nimport appReducer from './features/appSlice'\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    user: userReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport default configureStore({\r\n    reducer\r\n})","import React from 'react'\r\nimport './SidebarHeader.css';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nfunction SidebarHeader() {\r\n    return (\r\n        <div className=\"sidebar__header\">\r\n            <h3>Server Name</h3>\r\n            <ExpandMoreIcon />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarHeader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './SidebarChannels.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setChannelInfo } from './features/appSlice';\r\n\r\nfunction SidebarChannels(props) {\r\n    const dispatch = useDispatch();\r\n    const selectChannel = () => {\r\n        dispatch(setChannelInfo({\r\n            channelId: props.id,\r\n            channelName: props.name\r\n        }));\r\n        if(props.onClose)\r\n        props.onClose();\r\n    }\r\n    return (\r\n        <div className=\"sidebarChannels\" onClick={selectChannel}>\r\n            <h4>\r\n                <span className=\"sidebarChannel__hash\">#</span>\r\n                {props.name}\r\n            </h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChannels\r\n","import firebase from 'firebase';\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDuGGZIE3TzFO16nZFlUyljhPWmcPuKk9g\",\r\n    authDomain: \"discord-clone-7bc40.firebaseapp.com\",\r\n    projectId: \"discord-clone-7bc40\",\r\n    storageBucket: \"discord-clone-7bc40.appspot.com\",\r\n    messagingSenderId: \"421129527143\",\r\n    appId: \"1:421129527143:web:7ae9ba6dd9ea53c11659c2\",\r\n    measurementId: \"G-EVJ7T81YPJ\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport { auth, provider };\r\nexport default db;","import React, { useEffect, useState } from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './SidebarChannelList.css';\r\nimport SidebarChannels from './SidebarChannels';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice'\r\nimport db, { auth } from './firebase';\r\n\r\nfunction SidebarChannelList(props) {\r\n    const user = useSelector(selectUser);\r\n    const [channels, setChannels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('channels').onSnapshot(snapShot => (\r\n            setChannels(snapShot.docs.map(doc => ({\r\n                id: doc.id,\r\n                channel: doc.data()\r\n            })))\r\n        ))\r\n    }, []);\r\n\r\n    const handleAddChannel = () => {\r\n        const channelName = prompt(\"Enter a new channel name\");\r\n        if (channelName) {\r\n            db.collection('channels').add({\r\n                channelName\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"sidebar__channels\">\r\n            <div className=\"sidebar__channelsHeader\">\r\n                <div className=\"sidebar__channelsHeaderType\">\r\n                    <ExpandMoreIcon />\r\n                    <h3>Text Channels</h3>\r\n                </div>\r\n                <div className=\"sidebar__addchannel\" title=\"click here to add channel\">\r\n                    <AddIcon onClick={handleAddChannel}  />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__channelList\">\r\n                {channels.map(({ id, channel }) => {\r\n                    return (\r\n                        <SidebarChannels key={id} name={channel.channelName} id={id} onClose={props.onClose}/>\r\n                    )\r\n                })}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChannelList\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './SidebarProfile.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice'\r\nimport {auth} from './firebase';\r\n\r\nfunction SidebarProfile() {\r\n    const user = useSelector(selectUser);\r\n    return (\r\n        <div className=\"sidebar__profile\">\r\n            <Avatar src={user.photo} onClick={()=>auth.signOut()} title=\"Click here to log out\"/>\r\n            <div className=\"sidebar__profileInfo\">\r\n\r\n                <h3>{user.displayName}</h3>\r\n                <p>@{user.uid}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarProfile\r\n","import React from 'react'\r\nimport './Sidebar.css';\r\nimport SidebarHeader from './SidebarHeader';\r\nimport SidebarChannelList from './SidebarChannelList';\r\nimport SidebarProfile from './SidebarProfile';\r\n\r\nfunction Sidebar(props) {\r\n        return (\r\n        <div className={\"sidebar \" + (props.open ? \"display__flex\" : \"\")}>\r\n            <SidebarHeader />            \r\n            <SidebarChannelList onClose={props.onClose}/> \r\n            <SidebarProfile />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './ChatHeader.css';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport EditLocationIcon from '@material-ui/icons/EditLocation';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction ChatHeader(props) {\r\n    return (\r\n        <div className=\"chatHeader\">\r\n            <div className=\"chatHeader__left\">\r\n                <MenuIcon onClick={props.openMenu}/>\r\n                <h3>\r\n                    <p className=\"chatHeader__hash\">#</p>\r\n                    {props.channelName}\r\n                </h3>\r\n            </div>\r\n            <div className=\"chatHeader__right\">\r\n                <NotificationsIcon />\r\n                <EditLocationIcon />\r\n                <PeopleAltIcon />\r\n                <div className=\"chatHeader__search\">\r\n                    <input type=\"text\" placeholder=\"Search\"/>\r\n                    <SearchIcon />\r\n                </div>\r\n                <HelpIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatHeader\r\n","import React from 'react';\r\nimport './ChatMessage.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction ChatMessage(props) {\r\n    return (\r\n\r\n        <div className=\"message\">\r\n            <Avatar src={props.user.photo}/>\r\n            <div className=\"message__info\">\r\n                <h4>\r\n                    {props.user.displayName}\r\n                        <span className=\"message__timestamp\">{new Date(props.time.seconds  * 1000).toISOString()}</span>\r\n                </h4>\r\n                <p>{props.message}</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChatMessage\r\n","import React from 'react';\r\nimport './ChatInput.css'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nfunction ChatInput(props) {\r\n    return (\r\n        <div className=\"chat__input\">\r\n            <AddCircleIcon/>\r\n            <form>\r\n                <input disabled={!props.channelId} value={props.input} onChange={props.handleInput} placeholder={`Message #${props.channelName || \"\"}`} />\r\n                <button className=\"chatinput__submit\" type=\"submit\" onClick={(e)=>props.send(e)}>Send Message</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Chat.css';\r\nimport ChatHeader from './ChatHeader';\r\nimport ChatMessage from './ChatMessage';\r\nimport ChatInput from './ChatInput';\r\nimport { selectChannelId, selectChannelName } from './features/appSlice';\r\nimport { selectUser } from './features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat(props) {\r\n    const user = useSelector(selectUser);\r\n\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const handleInput = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        db.collection(\"channels\")\r\n            .doc(channelId)\r\n            .collection(\"message\")\r\n            .add({\r\n                message: input,\r\n                user: user,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n            });\r\n        setInput(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (channelId) {\r\n            db.collection(\"channels\")\r\n                .doc(channelId)\r\n                .collection(\"message\")\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot((snapshot) => {\r\n                    let msg = snapshot.docs.map((doc) => {\r\n                        return {\r\n                            message: doc.data().message,\r\n                            user: doc.data().user,\r\n                            timestamp: doc.data().timestamp\r\n                        }\r\n                    });\r\n                    setMessages(msg);\r\n                });\r\n        }\r\n    }, [channelId]);\r\n\r\n    \r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={channelName} openMenu={props.openMenu} />\r\n            <div className=\"chat__messages\">\r\n                {\r\n                    messages.map(message => {\r\n                        return message.timestamp && <ChatMessage key={message.timestamp.seconds} user={message.user} time={message.timestamp} message={message.message} />\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <ChatInput input={input} handleInput={handleInput} channelId={channelId} channelName={channelName} send={sendMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/discord.ef814e33.png\";","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport logo from './img/discord.png'\r\nimport './Login.css'\r\nimport { auth, provider } from './firebase';\r\n\r\nfunction Login() {\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).catch(err=> console.log(err.message));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__logo\">\r\n                <img src={logo} alt=\"Discord logo\" />\r\n            </div>\r\n\r\n            <Button className=\"login__btn\" onClick={signIn}>Sign In</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Sidebar from './Sidebar';\r\nimport Chat from './Chat';\r\nimport Login from './Login';\r\nimport './App.css';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\nimport { login, logout } from \"./features/userSlice\";\r\n\r\nconst App = () => {\r\n    let dispatch = useDispatch();\r\n    const user = useSelector(selectUser);\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((authUser) => {\r\n            if (authUser) {\r\n                dispatch(login({\r\n                    uid: authUser.uid,\r\n                    photo: authUser.photoURL,\r\n                    email: authUser.email,\r\n                    displayName: authUser.displayName\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(logout());\r\n            }\r\n        })\r\n    }, [dispatch]);\r\n\r\n    const [drawer, setDrawer] = useState(false);\r\n\r\n    const openMenu = () => {\r\n        setDrawer(!drawer);\r\n    }\r\n\r\n    return <div className=\"app\">\r\n        {user ?\r\n            <>\r\n                <Sidebar onClose={null}/>\r\n                <Drawer anchor={\"left\"} open={drawer} onClose={openMenu}>\r\n                    <Sidebar open={drawer} onClose={openMenu}/>\r\n                </Drawer>\r\n                <Chat openMenu={openMenu} />\r\n            </>\r\n            :\r\n            <Login />\r\n\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\"));"],"sourceRoot":""}